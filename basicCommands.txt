1. pwd
   Command: pwd
   Description: Stands for "Print Working Directory". Displays the current directory.
   Example:
       $ pwd
       /home/user
   Additional Note: Useful for checking your current location in the filesystem.

2. ls
   Command: ls
   Description: Lists files and directories in the current directory.
   Example:
       $ ls
       Documents  Downloads  Pictures  Videos
   Additional Note: Use `ls -l` for detailed information or `ls -a` to include hidden files.

3. cd
   Command: cd
   Description: Changes the current directory.
   Example:
       $ cd Documents
       $ pwd
       /home/user/Documents
   Additional Note: Use `cd ..` to move up one directory level or `cd ~` to go to the home directory.

4. mkdir
   Command: mkdir
   Description: Creates a new directory.
   Example:
       $ mkdir new_folder
       $ ls
       Documents  Downloads  new_folder  Pictures  Videos
   Additional Note: Use `mkdir -p` to create parent directories if they donâ€™t exist.

5. rmdir
   Command: rmdir
   Description: Removes an empty directory.
   Example:
       $ rmdir new_folder
       $ ls
       Documents  Downloads  Pictures  Videos
   Additional Note: Use `rm -r` to remove non-empty directories.

6. touch
   Command: touch
   Description: Creates an empty file.
   Example:
       $ touch file.txt
       $ ls
       Documents  Downloads  file.txt  Pictures  Videos
   Additional Note: Use `touch` to update the timestamp of an existing file.

7. rm
   Command: rm
   Description: Removes files or directories.
   Example:
       $ rm file.txt
       $ ls
       Documents  Downloads  Pictures  Videos
   Additional Note: Use `rm -r` to remove directories and their contents.

8. cp
   Command: cp
   Description: Copies files or directories.
   Example:
       $ cp file.txt backup.txt
       $ ls
       file.txt  backup.txt
   Additional Note: Use `cp -r` to copy directories recursively.

9. mv
   Command: mv
   Description: Moves or renames files or directories.
   Example:
       $ mv file.txt new_file.txt
       $ ls
       new_file.txt
   Additional Note: Use `mv` to rename files or move them to a different directory.

10. cat
    Command: cat
    Description: Displays the content of a file.
    Example:
        $ cat file.txt
        Hello, World!
    Additional Note: Use `cat > file.txt` to create a file and write content to it.

11. less
    Command: less
    Description: Views file content one screen at a time.
    Example:
        $ less file.txt
    Additional Note: Press `q` to exit the `less` viewer.

12. head
    Command: head
    Description: Displays the first few lines of a file.
    Example:
        $ head file.txt
    Additional Note: Use `head -n 5 file.txt` to display the first 5 lines.

13. tail
    Command: tail
    Description: Displays the last few lines of a file.
    Example:
        $ tail file.txt
    Additional Note: Use `tail -f file.txt` to monitor a file in real-time.

14. chmod
    Command: chmod
    Description: Changes file permissions.
    Example:
        $ chmod 755 script.sh
    Additional Note: Use `chmod +x` to make a file executable.

15. chown
    Command: chown
    Description: Changes file ownership.
    Example:
        $ chown user:user file.txt
    Additional Note: Requires root privileges to change ownership.

16. find
    Command: find
    Description: Searches for files and directories.
    Example:
        $ find /home -name file.txt
    Additional Note: Use `find . -type d` to search for directories.

17. grep
    Command: grep
    Description: Searches for patterns in files.
    Example:
        $ grep "Hello" file.txt
    Additional Note: Use `grep -r "pattern" /path` to search recursively.

18. man
    Command: man
    Description: Displays the manual for a command.
    Example:
        $ man ls
    Additional Note: Press `q` to exit the manual.

19. echo
    Command: echo
    Description: Prints text to the terminal.
    Example:
        $ echo "Hello, World!"
        Hello, World!
    Additional Note: Use `echo $VARIABLE` to display environment variables.

20. whoami
    Command: whoami
    Description: Displays the current user.
    Example:
        $ whoami
        user
    Additional Note: Useful for checking user identity in scripts.

21. uname
    Command: uname
    Description: Displays system information.
    Example:
        $ uname -a
    Additional Note: Use `uname -r` to display the kernel version.

22. df
    Command: df
    Description: Shows disk space usage.
    Example:
        $ df -h
    Additional Note: Use `df /path` to check space for a specific directory.

23. du
    Command: du
    Description: Displays directory or file size.
    Example:
        $ du -sh folder
    Additional Note: Use `du -a` to include all files.

24. ps
    Command: ps
    Description: Displays running processes.
    Example:
        $ ps aux
    Additional Note: Use `ps -ef` for a different format.

25. kill
    Command: kill
    Description: Terminates a process by PID.
    Example:
        $ kill 1234
    Additional Note: Use `kill -9` for a forceful termination.

26. top
    Command: top
    Description: Displays real-time system resource usage.
    Example:
        $ top
    Additional Note: Press `q` to exit the `top` viewer.

27. tar
    Command: tar
    Description: Archives files.
    Example:
        $ tar -cvf archive.tar file.txt
    Additional Note: Use `tar -xvf` to extract an archive.

28. zip/unzip
    Command: zip/unzip
    Description: Compresses or extracts files.
    Example:
        $ zip archive.zip file.txt
        $ unzip archive.zip
    Additional Note: Use `-r` with `zip` to compress directories.

29. ssh
    Command: ssh
    Description: Connects to a remote server via SSH.
    Example:
        $ ssh user@remote_host
    Additional Note: Use `-i` to specify an identity file.

30. scp
    Command: scp
    Description: Copies files between systems over SSH.
    Example:
        $ scp file.txt user@remote_host:/path
    Additional Note: Use `-r` to copy directories.

31. wget
    Command: wget
    Description: Downloads files from the web.
    Example:
        $ wget http://example.com/file.txt
    Additional Note: Use `-c` to resume interrupted downloads.

32. curl
    Command: curl
    Description: Transfers data from or to a server.
    Example:
        $ curl http://example.com
    Additional Note: Use `-O` to save the file with its original name.

33. apt
    Command: apt
    Description: Package manager for Debian-based systems.
    Example:
        $ sudo apt update
    Additional Note: Use `apt install` to install packages.

34. yum/dnf
    Command: yum/dnf
    Description: Package manager for Red Hat-based systems.
    Example:
        $ sudo yum update
    Additional Note: Use `dnf` for newer Red Hat-based systems.

35. systemctl
    Command: systemctl
    Description: Controls system services.
    Example:
        $ sudo systemctl restart apache2
    Additional Note: Use `systemctl status` to check service status.

36. crontab
    Command: crontab
    Description: Schedules tasks.
    Example:
        $ crontab -e
    Additional Note: Use `crontab -l` to list scheduled tasks.

37. history
    Command: history
    Description: Displays command history.
    Example:
        $ history
    Additional Note: Use `!<number>` to rerun a specific command.

38. clear
    Command: clear
    Description: Clears the terminal screen.
    Example:
        $ clear
    Additional Note: Shortcut for clearing cluttered terminal output.

39. exit
    Command: exit
    Description: Closes the terminal session.
    Example:
        $ exit
    Additional Note: Use `Ctrl+D` as an alternative.

40. alias
    Command: alias
    Description: Creates shortcuts for commands.
    Example:
        $ alias ll="ls -l"
    Additional Note: Use `unalias` to remove an alias.